(library
 (name lqccs)
 (libraries menhirLib owl)
 (preprocess
  (pps ppx_deriving.show ppx_deriving.ord ppx_deriving.eq)))

(ocamllex
 (modules scanner))

(menhir
 (modules parser)
 (flags --explain --dump --strict --exn-carries-state))



;; This section deals with the .messages file. It is inspired by the official
;; menhir's parser error messages  https://gitlab.inria.fr/fpottier/menhir/-/blob/master/src/stage2/dune

;; The module [ParserMessages] is generated by Menhir based on the source file
;; "parserMessages.messages". The completeness check is performed first.

(rule
  (deps parserMessages.check)
  (action (with-stdout-to parserMessages.ml
    (run menhir --explain --dump --strict --exn-carries-state
      %{dep:parser.mly}
      --compile-errors %{dep:parserMessages.messages}
    )
  ))
)

;; In order to perform the completeness check, we must first generate a file
;; "parserMessages.auto.messages" that contains a list of all error states.

(rule
  (with-stdout-to parserMessages.auto.messages
    (run menhir --explain --dump --strict --exn-carries-state
       %{dep:parser.mly}
       --list-errors
    )
  )
)

;; The completeness check verifies that all error messages are listed in the
;; ".messages" file. It compares the ".messages" file with that generated by
;; Menhir using the above rule.

(rule
  (with-stdout-to parserMessages.check
  (run menhir --explain --dump --strict --exn-carries-state
    %{dep:parser.mly}
    --compare-errors %{dep:parserMessages.auto.messages}
    --compare-errors %{dep:parserMessages.messages}
  ))
)